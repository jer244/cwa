{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/new-company/company-exists-error/company-exists-error.component.css","webpack:///./src/app/new-company/company-exists-error/company-exists-error.component.html","webpack:///./src/app/new-company/company-exists-error/company-exists-error.component.ts","webpack:///./src/app/new-company/new-company.component.css","webpack:///./src/app/new-company/new-company.component.html","webpack:///./src/app/new-company/new-company.component.ts","webpack:///./src/app/pwreset/pwreset.component.css","webpack:///./src/app/pwreset/pwreset.component.html","webpack:///./src/app/pwreset/pwreset.component.ts","webpack:///./src/app/start/modal/modal.component.css","webpack:///./src/app/start/modal/modal.component.html","webpack:///./src/app/start/modal/modal.component.ts","webpack:///./src/app/start/start.component.css","webpack:///./src/app/start/start.component.html","webpack:///./src/app/start/start.component.ts","webpack:///./src/app/start/user-exists-error/user-exists-error.component.css","webpack:///./src/app/start/user-exists-error/user-exists-error.component.html","webpack:///./src/app/start/user-exists-error/user-exists-error.component.ts","webpack:///./src/app/tc/tc.component.css","webpack:///./src/app/tc/tc.component.html","webpack:///./src/app/tc/tc.component.ts","webpack:///./src/app/top-bar/top-bar.component.css","webpack:///./src/app/top-bar/top-bar.component.html","webpack:///./src/app/top-bar/top-bar.component.ts","webpack:///./src/app/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StartComponent } from './start/start.component';\nimport { NewCompanyComponent } from './new-company/new-company.component';\nimport { LoginComponent } from './login/login.component';\nimport { PwresetComponent } from './pwreset/pwreset.component';\nimport { TcComponent } from './tc/tc.component';\n\nconst routes: Routes = [\n  { path: '', component: StartComponent },\n  { path: 'new/:email', component: NewCompanyComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'pwreset', component: PwresetComponent },\n  { path: 'tc', component: TcComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".main-content-container {\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\"","module.exports = \"<cwa-top-bar></cwa-top-bar>\\n<div class=\\\"main-content-container\\\">\\n  <router-outlet></router-outlet>\\n</div>  \\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cwa-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'cwa';\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TopBarComponent } from './top-bar/top-bar.component';\nimport { StartComponent } from './start/start.component';\nimport { ModalComponent } from './start/modal/modal.component';\nimport { UserExistsErrorComponent } from './start/user-exists-error/user-exists-error.component';\nimport { NewCompanyComponent } from './new-company/new-company.component';\nimport { CompanyExistsErrorComponent } from './new-company/company-exists-error/company-exists-error.component';\nimport { UserService } from './user.service';\nimport { LoginComponent } from './login/login.component';\nimport { PwresetComponent } from './pwreset/pwreset.component';\nimport { TcComponent } from './tc/tc.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopBarComponent,\n    StartComponent,\n    ModalComponent,\n    UserExistsErrorComponent,\n    NewCompanyComponent,\n    CompanyExistsErrorComponent,\n    LoginComponent,\n    PwresetComponent,\n    TcComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule, \n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule\n  ],\n  providers: [UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"main-content-text\\\">\\n        <h3>Dummy Login Link</h3>\\n        <p>This is where you would login</p>\\n    </div>\\n        <a routerLink=\\\"/\\\" class=\\\"button content-btn\\\">HOME</a>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cwa-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\r\\n.error-wrapper {\\r\\n    position: absolute;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    top: -102px;\\r\\n    height: 100px;\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.error-box {\\r\\n    position: relative;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    height: 100px;\\r\\n    width: 70%;\\r\\n    background: var(--error-red);\\r\\n    color: var(--main-light-color);\\r\\n    text-align: center;\\r\\n    margin: 0 auto;\\r\\n    padding: 1em;\\r\\n}\\r\\n\\r\\n.error-box p {\\r\\n    font-weight: 100;\\r\\n    font-size: 0.8em;\\r\\n    padding: 0;\\r\\n    line-height: 150%;\\r\\n}\\r\\n\\r\\n.error-bubble {\\r\\n    width: 0;\\r\\n    height: 0;\\r\\n    border-left: 5px solid transparent;\\r\\n    border-right: 5px solid transparent;\\r\\n    border-top: 5px solid var(--error-red);\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\n.error-link {\\r\\n    color: var(--main-light-color);\\r\\n    text-decoration: none;\\r\\n    font-weight: 700;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"error-wrapper\\\">\\n  <div class=\\\"error-box\\\"><p>That company looks like it already exists. Try to <a routerLink=\\\"/\\\" class=\\\"error-link\\\">Find My Team</a> using your work email.</p></div>\\n  <div class=\\\"error-bubble\\\"></div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cwa-company-exists-error',\n  templateUrl: './company-exists-error.component.html',\n  styleUrls: ['./company-exists-error.component.css']\n})\nexport class CompanyExistsErrorComponent {\n\n  constructor() { }\n\n}\n","module.exports = \"\"","module.exports = \"<!--  GET PERSONAL INFO -->\\n\\n<div *ngIf=\\\"getPersonalInfo\\\" class=\\\"main-content\\\">\\n    <div class=\\\"main-content-text\\\">\\n        <h3>Get started on Company</h3>\\n        <p>Your email wasn't associated with an existing company. Fill out the information below to create a new one.</p>\\n    </div>\\n    <form #f=\\\"ngForm\\\" class=\\\"input-container\\\">\\n        <input [(ngModel)]='firstName' id=\\\"first\\\" name=\\\"first\\\" type=\\\"text\\\" placeholder=\\\"First Name\\\" class=\\\"input-box\\\" required>\\n        <input [(ngModel)]='lastName' id=\\\"last\\\" name=\\\"last\\\" type=\\\"text\\\" placeholder=\\\"Last Name\\\" class=\\\"input-box\\\" required>\\n        <input [(ngModel)]='displayName' id=\\\"displayName\\\" name=\\\"displayName\\\" class=\\\"full-line-input input-box\\\" type=\\\"text\\\" placeholder=\\\"Display Name\\\">\\n        <input [(ngModel)]='password' id=\\\"password\\\" name=\\\"password\\\" class=\\\"full-line-input input-box\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" required>\\n        <div class=\\\"input-wrapper full-line-input\\\">\\n            <input [(ngModel)]='company' id='company' name=\\\"company\\\" class=\\\"input-box input-box-error\\\" type=\\\"text\\\" placeholder=\\\"Company Name\\\" [ngClass]=\\\"{'error-input-box': companyExists}\\\" required>\\n            <cwa-company-exists-error *ngIf=\\\"companyExists\\\"></cwa-company-exists-error>\\n        </div>\\n    </form>\\n    <a (click)=\\\"createUser()\\\" class=\\\"button content-btn\\\">SIGN UP</a>\\n    <p class=\\\"footnote\\\">By selecting Sign Up, you agree to our\\n        <a routerLink=\\\"/tc\\\">Terms & Conditions</a>\\n    </p>\\n</div>\\n\\n<!-- GET COMPANY INFO -->\\n\\n<div *ngIf=\\\"!getPersonalInfo\\\" class=\\\"main-content\\\">\\n    <div class=\\\"main-content-text\\\">\\n        <h3>Company sign up mode</h3>\\n        <p>Anyone with a specified email domain can join your team. Otherwise, an owner or co-owner will have to invite all\\n            team members.</p>\\n    </div>\\n    <div class=\\\"input-container-flex\\\">\\n        <div class=\\\"radio-container\\\">\\n            <input type=\\\"radio\\\" name=\\\"signup-mode\\\" value=\\\"open\\\" id=\\\"open-mode\\\">\\n            <label for=\\\"open-mode\\\">Any email from my domains</label>\\n        </div>\\n        <div class=\\\"tags-container\\\">\\n            <div class=\\\"tag\\\">\\n                <p class=\\\"tag-content\\\">@example.com</p>\\n                <div class=\\\"round-close-button\\\">&times;</div>\\n            </div>\\n            <div class=\\\"tag\\\">\\n                <p class=\\\"tag-content\\\">@example.com</p>\\n                <div class=\\\"round-close-button\\\">&times;</div>\\n            </div>\\n            <div class=\\\"tag\\\">\\n                <p class=\\\"tag-content\\\">@example.com</p>\\n                <div class=\\\"round-close-button\\\">&times;</div>\\n            </div>\\n        </div>\\n        <div class=\\\"radio-container\\\">\\n            <input type=\\\"radio\\\" name=\\\"signup-mode\\\" value=\\\"invite\\\" id=\\\"invite-mode\\\">\\n            <label for=\\\"invite-mode\\\">Invite Only</label>\\n        </div>\\n    </div>\\n    <a href=\\\"./index.html\\\" class=\\\"button content-btn\\\">DONE</a>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'cwa-new-company',\n  templateUrl: './new-company.component.html',\n  styleUrls: ['./new-company.component.css']\n})\nexport class NewCompanyComponent {\n\n  constructor(private userService: UserService, private route: ActivatedRoute) {\n    this.email = route.snapshot.params['email'];\n  }\n\n  getPersonalInfo: boolean = true;\n  companyExists: boolean = false;\n  company: string = '';\n  alias: string = '';\n  firstName: string = '';\n  lastName: string = '';\n  displayName: string = '';\n  password: string = '';\n  email: string = '';\n\n  createUser() {\n\n    let newUser = {\n      firstName: this.firstName,\n      lastName: this.lastName,\n      displayName: this.displayName,\n      email: this.email,\n      password: this.password,\n      company: this.company\n    }\n\n    this.userService.checkCompany(newUser.company)\n      .subscribe((data: any) => {\n        if (data.companyExists) {\n          this.companyExists = true;\n          return;\n        } else {\n          this.userService.createUser(newUser)\n            .subscribe((data) => {\n              alert(`New User Created - ${JSON.stringify(data)}`);\n              this.getPersonalInfo = false;\n              this.company = '';\n              this.alias = '';\n              this.firstName = '';\n              this.lastName = '';\n              this.displayName = '';\n              this.password = '';\n              this.email = '';\n            });\n        }\n      })\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"main-content-text\\\">\\n        <h3>Dummy Password Reset Link</h3>\\n        <p>This is where you would change your password</p>\\n    </div>\\n        <a routerLink=\\\"/\\\" class=\\\"button content-btn\\\">HOME</a>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cwa-pwreset',\n  templateUrl: './pwreset.component.html',\n  styleUrls: ['./pwreset.component.css']\n})\nexport class PwresetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".modal-container {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    background: rgba(0, 0, 0, 0.7);\\r\\n}\\r\\n\\r\\n.modal-content {\\r\\n    position: relative;\\r\\n    height: 45vh;\\r\\n    width: 30vw;\\r\\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\\r\\n    color: var(--content-font-color);\\r\\n    text-align: center;\\r\\n    background-color: var(--main-light-color);\\r\\n    padding: 3em 2em;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: space-evenly;\\r\\n    border-radius: 3px;\\r\\n}\\r\\n\\r\\n.modal-content p {\\r\\n    line-height: 170%;\\r\\n}\\r\\n\\r\\n.email-pic {\\r\\n    background: var(--main-blue) URL(\\\"./assets/email.png\\\") no-repeat center;\\r\\n    background-size: 50%;\\r\\n    border-radius: 50%;\\r\\n    width: 40%;\\r\\n    padding-top: 40%;\\r\\n    -ms-grid-row-align: center;\\r\\n        align-self: center;\\r\\n}\\r\\n\\r\\n.modal-close {\\r\\n    position: absolute;\\r\\n    right: 0;\\r\\n    top: -25px;\\r\\n    text-decoration: none;\\r\\n    color: var(--main-light-color);\\r\\n    margin: 3px;\\r\\n    font-weight: 600;\\r\\n    align-self: flex-end;\\r\\n    font-style: italic;\\r\\n}\"","module.exports = \"<div class=\\\"modal-container\\\">\\n  <div class=\\\"modal-content\\\">\\n          <a (click)=\\\"close.emit()\\\" class=\\\"modal-close\\\">CLOSE X</a>\\n      <div class=\\\"email-pic\\\"></div>\\n      <h3>That looks familiar</h3>\\n      <p>That email looks like it's part of an existing company. Check your email for an invite to your company.</p>\\n  </div>\\n</div>\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'cwa-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.css']\n})\nexport class ModalComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  @Output() close = new EventEmitter();\n}\n","module.exports = \"\"","module.exports = \"<!-- START BY ASKING FOR EMAIL -->\\n\\n<div *ngIf=\\\"!showJoin\\\" class=\\\"main-content\\\">\\n    <div class=\\\"main-content-text\\\">\\n        <h3>Get started on Company</h3>\\n        <p>Enter your work email</p>\\n    </div>\\n        <div class=\\\"input-wrapper\\\">\\n            <input name=\\\"primaryEmail\\\" [ngModel]=\\\"email\\\" email #prmEmail=\\\"ngModel\\\" class=\\\"input-box\\\" [ngClass]=\\\"{'error-input-box': userExists}\\\" placeholder=\\\"name@company.com\\\" (keyup.enter)=\\\"(!prmEmail.errors?.email) ? onClick(prmEmail.value) : null\\\">\\n            <cwa-user-exists-error *ngIf=\\\"userExists\\\"></cwa-user-exists-error>\\n        </div>\\n        <a [ngClass]=\\\"{'disabled': prmEmail.errors?.email}\\\" class=\\\"button content-btn\\\" (click)=\\\"onClick(prmEmail.value)\\\">NEXT</a>\\n</div>\\n\\n<!-- SHOW MODAL IF USER ALREADY EXISTS -->\\n<cwa-modal (close)=\\\"closeModal()\\\" *ngIf=\\\"displayModal\\\"></cwa-modal>\\n\\n<!-- SHOW PAGE FOR JOINING CURRENT COMPANY -->\\n<div *ngIf=\\\"showJoin\\\" class=\\\"main-content\\\">\\n    <div class=\\\"main-content-text\\\">\\n        <h3>Join the Company team</h3>\\n        <p>Your email is associated with an existing company. Fill out the information below to finish the setup.</p>\\n    </div>\\n    <form #f=\\\"ngForm\\\" class=\\\"input-container\\\">\\n            <input [(ngModel)]= 'firstName' id=\\\"first\\\" name=\\\"first\\\" type=\\\"text\\\" placeholder=\\\"First Name\\\" class=\\\"input-box\\\" required>\\n            <input [(ngModel)]= 'lastName' id=\\\"last\\\" name=\\\"last\\\" type=\\\"text\\\" placeholder=\\\"Last Name\\\" class=\\\"input-box\\\" required>\\n            <input [(ngModel)]= 'displayName' id=\\\"displayName\\\" name=\\\"displayName\\\" class=\\\"full-line-input input-box\\\" type=\\\"text\\\" placeholder=\\\"Display Name\\\">\\n            <input [(ngModel)]= 'password' id=\\\"password\\\" name=\\\"password\\\" class=\\\"full-line-input input-box\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" required>\\n        </form>\\n        <a (click)=\\\"createUser()\\\" class=\\\"button content-btn\\\">SIGN UP</a>\\n    <p class=\\\"footnote\\\">By selecting Sign Up, you agree to our\\n        <a routerLink=\\\"/tc\\\">Terms & Conditions</a>\\n    </p>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { Observable } from 'rxjs';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'cwa-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.css']\n})\nexport class StartComponent implements OnInit{\n\n  displayModal: boolean;\n  userExists: boolean;\n  showJoin: boolean;\n  company: string;\n  alias: string;\n  firstName: string;\n  lastName: string;\n  displayName: string;\n  password: string;\n  email: string;\n\n  constructor(private userService: UserService, private router: Router) { }\n\nngOnInit() {\n  this.displayModal = false;\n  this.userExists = false;\n  this.showJoin = false;\n  this.company = '';\n  this.alias = '';\n  this.firstName = '';\n  this.lastName = '';\n  this.displayName = '';\n  this.password = '';\n  this.email = '';\n}\n  onClick(email) {\n    this.email = email;\n    this.userService.checkEmail(email)\n      .subscribe((data: any) => {\n        if(data.userExists == true){\n          this.userExists = true;\n          return;\n        }\n        if(data.companyExists == true) {\n          this.company = data.company.parent;\n          this.alias = data.company.alias;\n          this.displayModal = true;\n          return;\n        }\n        this.router.navigate([`/new/${this.email}`]);\n      });;\n  }\n\n  closeModal() {\n    this.displayModal = false;\n    this.showJoin = true;\n    console.log(this.alias, this.company);\n  }\n\n  createUser() {\n    let newUser = {\n      firstName: this.firstName,\n      lastName: this.lastName,\n      displayName: this.displayName,\n      email: this.email,\n      password: this.password,\n      company: this.company\n    }\n    this.userService.createUser(newUser)\n      .subscribe((data) => {\n        alert(`New User Created - ${JSON.stringify(data)}`);\n        this.showJoin = false;\n        this.company = '';\n        this.alias = '';\n        this.firstName = '';\n        this.lastName = '';\n        this.displayName = '';\n        this.password = '';\n        this.email = '';\n      })\n  }\n}\n","module.exports = \"\\r\\n.error-wrapper {\\r\\n    position: absolute;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    top: -102px;\\r\\n    height: 100px;\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.error-box {\\r\\n    position: relative;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    height: 100px;\\r\\n    width: 70%;\\r\\n    background: var(--error-red);\\r\\n    color: var(--main-light-color);\\r\\n    text-align: center;\\r\\n    margin: 0 auto;\\r\\n    padding: 1em;\\r\\n}\\r\\n\\r\\n.error-box p {\\r\\n    font-weight: 100;\\r\\n    font-size: 0.8em;\\r\\n    padding: 0;\\r\\n    line-height: 150%;\\r\\n}\\r\\n\\r\\n.error-bubble {\\r\\n    width: 0;\\r\\n    height: 0;\\r\\n    border-left: 5px solid transparent;\\r\\n    border-right: 5px solid transparent;\\r\\n    border-top: 5px solid var(--error-red);\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\n.error-link {\\r\\n    color: var(--main-light-color);\\r\\n    text-decoration: none;\\r\\n    font-weight: 700;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"error-wrapper\\\">\\n  <div class=\\\"error-box\\\">\\n    <p>That email looks like it's already taken. Do you want to\\n      <a routerLink=\\\"/login\\\" class=\\\"error-link\\\">login</a> or\\n      <a routerLink=\\\"/pwreset\\\" class=\\\"error-link\\\">reset your password</a>?</p>\\n  </div>\\n  <div class=\\\"error-bubble\\\"></div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cwa-user-exists-error',\n  templateUrl: './user-exists-error.component.html',\n  styleUrls: ['./user-exists-error.component.css']\n})\nexport class UserExistsErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"main-content-text\\\">\\n        <h3>Legal Ipsum</h3>\\n        <p>In other words, you may use, reproduce, display, perform, sublicense and distribute the Program originate from and are distributed by the Recipient, this Agreement or Distributor's own license agreement, such license applies only to the extent it does not give you the right to change the software accompanying this Agreement as released by, including source code, documentation source, and configuration files for the physical act of running the Standard Version, and of any installation facilities provided by the Copyright Holder. This license has been modified. If you obtain such knowledge after the cause of action arose.</p>\\n    </div>\\n        <a routerLink=\\\"/\\\" class=\\\"button content-btn\\\">HOME</a>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cwa-tc',\n  templateUrl: './tc.component.html',\n  styleUrls: ['./tc.component.css']\n})\nexport class TcComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".top-bar {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    align-items: center;\\r\\n    background: rgba(0, 0, 0, 0);\\r\\n    height: 4.5em;\\r\\n    padding: 1em;\\r\\n}\\r\\n.logo {\\r\\n    background: URL(\\\"../assets/logo.png\\\") no-repeat center;\\r\\n    background-size: 100% auto;\\r\\n    height: 50px;\\r\\n    width: 50px;\\r\\n}\"","module.exports = \"<div class=\\\"top-bar\\\">\\n  <a (click)=\\\"refresh()\\\" class=\\\"logo\\\"></a>\\n  <div class=\\\"btn-container\\\">\\n      <p>Already have an account?</p>\\n      <a routerLink=\\\"/login\\\" class=\\\"button login-btn\\\">LOG IN</a>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'cwa-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.css']\n})\nexport class TopBarComponent {\n\n  constructor(private router: Router) { }\n\n  refresh() {\n    this.router.navigate(['/']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  checkEmail(email: String) {\n    return this.http.get(`/api/checkuser/${email}`);\n  }\n\n  checkCompany(company: String) {\n    return this.http.get(`/api/checkcompany/${company}`);\n  }\n\n  createUser(user: any) {\n    return this.http.post('/api/newUser', user);\n  }\n\n  // router.get('/checkuser/:email', checkUser);\n  // router.get('/checkcompany/:company', checkCompany);\n  // router.post('/newUser', newUser);\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}